// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
	group 'fr.univmobile'
    version '0.0.4-SNAPSHOT'
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.+'
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

apply plugin: 'maven'
apply plugin: 'android'

android {
    compileSdkVersion 19
    buildToolsVersion '20.0.0'

    defaultConfig {
        applicationId 'org.unpidf.univmobile'
        minSdkVersion 15
        targetSdkVersion 19
    }

    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
    
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }
}

android.applicationVariants.all { variant ->
    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
        options.links("http://docs.oracle.com/javase/7/docs/api/");
        options.links("http://d.android.com/reference/");
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }
}

dependencies {
    compile 'com.android.support:support-v4:19.0.0'
    compile 'com.google.android.gms:play-services:+'
}

uploadArchives {
	repositories.mavenDeployer {
		repository (url: 'http://univmobile.vswip.com/nexus/content/repositories/snapshots') {
			// These are loaded from: ${HOME}/.gradle/gradle.properties
            authentication(userName: nexusUsername, password: nexusPassword)
        }
    }
}
